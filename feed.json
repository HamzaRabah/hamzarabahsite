{
	"version": "https://jsonfeed.org/version/1",
	"title": "حمزة رباح",
	"icon": "https://micro.blog/hamzarabah/avatar.jpg",
	"home_page_url": "https://hamzarabah.com/",
	"feed_url": "https://hamzarabah.com/feed.json",
	"items": [
		
			{
				"id": "http://hamzarabah.micro.blog/2025/03/06/github.html",
				"title": "كيف أستخدم GitHub في سوريا رغم الحظر",
				"content_html": "<p>بسبب العقوبات الأمريكية، تُحظر العديد من الخدمات والمواقع في سوريا، ولا يمكن الوصول إليها إلا عبر VPN. بينما تمنع معظم هذه المواقع أي اتصال من سوريا تمامًا، يختلف GitHub قليلًا: فهو يسمح ببعض الخدمات، لكنه قد يحظر حسابك إذا اكتشف موقعك. وهذا يجعل استخدامه أكثر تعقيدًا.<br>\nلكن هذا يزيد من تعقيد الأمور في سوريا، فقد تنسى تشغيل الـ VPN، مما قد يؤدي إلى اكتشاف GitHub لموقعك وحظر حسابك من الخدمات الأخرى.<br>\nوقد تتصل بعض البرامج تلقائيًا بـ GitHub دون أن تنتبه، مما يعرضك للحظر.</p>\n<p>نظرًا لعملي في المجال التقني عن بعد مع العديد من الشركات، وبحكم أن GitHub هو أحد أكثر المواقع استخدامًا من قبل الشركات للمشاريع البرمجية وإدارة الأكواد، ليس لدي خيار سوى استخدامه، وإلا سأضطر لتغيير الشركة! :)</p>\n<!-- raw HTML omitted -->\n<h3 id=\"لماذا-لا-يكفي-استخدام-vpn-فقط\">لماذا لا يكفي استخدام VPN فقط؟</h3>\n<p>المشكلة أن ليست كل خدمات الـ VPN تدعم Kill Switch، وحتى إن دعمتها، فقد يتوقف الـ VPN فجأة أو يبطئ الإنترنت. في بعض الأحيان، يقوم GitHub باكتشاف أنني أستخدمه من سوريا ويقوم بحظر حسابي.</p>\n<p>هذه الحلول ليست مثالية بالنسبة لي، حيث أنني لا أحب فتح الـ VPN باستمرار، لأن ذلك يؤدي إلى تباطؤ الإنترنت. (في سوريا، الإنترنت ضعيف في الأساس، فزيادة البطء ليست خيارًا جيدًا). بالإضافة إلى ذلك، تزيد الإعلانات على المواقع عندما أكون متصلًا عبر VPN، أما في سوريا، الحمد لله، لا تظهر لي أي إعلانات.</p>\n<!-- raw HTML omitted -->\n<h3 id=\"الحل-الذي-استخدمته\">الحل الذي استخدمته</h3>\n<p>لذلك، توصلت إلى الحل الأفضل بالنسبة لي، والذي جربته منذ فترة طويلة ولله الحمد لم أتعرض لأي حظر منذ ذلك الحين.<br>\nالحل بسيط: قررت &lsquo;حظر GitHub قبل أن يحظرني!&rsquo;</p>\n<p>لا أمزح! الفكرة هي أنني قمت بتعديل إعدادات الشبكة على جهازي بحيث تمنع أي حزمة شبكة تخرج من جهازي إلى أي IP عام خاص بـ GitHub، إلا إذا كنت متصلًا عبر VPN.</p>\n<p>(يمكنك أيضاً أتمتة هذه العملية بحيث يتم تحديث القائمة تلقائيًا باستخدام Cron Jobs، مما يضمن أن نطاقات GitHub الجديدة يتم تضمينها دون تدخل يدوي.)</p>\n<!-- raw HTML omitted -->\n<h3 id=\"الطريقة-على-macos\">الطريقة على macOS</h3>\n<p>كيفية إعداد macOS لحظر الاتصال بـ GitHub إلا عند الاتصال بـ VPN.</p>\n<h4 id=\"تحديد-واجهة-الشبكة-الخاصة-بالـ-vpn\">تحديد واجهة الشبكة الخاصة بالـ VPN</h4>\n<p>يجب عليك تحديد اسم واجهة الشبكة الخاصة بك:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-bash\" data-lang=\"bash\"><span style=\"color:#75715e\"># Look at the routing table to identify VPN interfaces</span>\nnetstat -rn | grep utun\n\n\n<span style=\"color:#75715e\"># Get details about all interfaces</span>\nifconfig | grep utun\n</code></pre></div><p>بالنسبة لـ ExpressVPN، عادةً ما سترى واجهة مثل utun8 أو شيء مشابه.</p>\n<h4 id=\"الحصول-على-نطاقات-الـ-ip-الخاصة-بـ-github\">الحصول على نطاقات الـ IP الخاصة بـ GitHub</h4>\n<p>يقوم GitHub بنشر نطاقات الـ IP الخاصة به عبر API عامة. يمكنك استخدام هذا السكربت بلغة Python لجلب وتنظيم هذه النطاقات, توليد القواعد الخاصة التي تقوم بحظر GitHub لاضافتها للملف الخاص <code>pf.conf</code>, ثم تقوم بانشاء نسخة مؤقتة عن الملف تتضمن القواعد الجديدة, حيث يمكنك استبدال الملف الاساسي بالملف الجديد.</p>\n<p>قم بتنزيل هذا السكربت من <!-- raw HTML omitted -->هنا<!-- raw HTML omitted -->, وتنفيذ هذه الأوامر التالية لإنشاء الملف الجديد:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-bash\" data-lang=\"bash\"><span style=\"color:#75715e\"># Make it executable</span>\nchmod +x github_pf.py\n\n\n<span style=\"color:#75715e\"># Run the Python script</span>\npython3 github_pf.py <span style=\"color:#e6db74\">&#34;YOUR_VPN_INTERFACE&#34;</span>\n</code></pre></div><h4 id=\"تطبيق-القواعد\">تطبيق القواعد</h4>\n<p>بمجرد أن تقوم بتحديث ملف <code>pf.conf</code> الخاص بك، قم بتطبيق القواعد باستخدام الأوامر التالية:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-bash\" data-lang=\"bash\"><span style=\"color:#75715e\"># Validate the configuration</span>\nsudo pfctl -nf /etc/pf.conf\n\n\n<span style=\"color:#75715e\"># Load the configuration</span>\nsudo pfctl -f /etc/pf.conf\n\n\n<span style=\"color:#75715e\"># Enable pf if not already enabled</span>\nsudo pfctl -e\n</code></pre></div><!-- raw HTML omitted -->\n<h3 id=\"ملاحظات-وحل-المشاكل-الشائعة\">ملاحظات وحل المشاكل الشائعة</h3>\n<ul>\n<li>\n<p>هذه الطريقة فعالة ولكنها تتطلب بعض المهارات التقنية. قد تحتاج إلى بعض الوقت لتطبيقها بشكل صحيح.</p>\n</li>\n<li>\n<p>إذا كنت تستخدم أنظمة أخرى مثل Windows أو Linux، ستحتاج إلى استخدام أدوات مختلفة أو طرق مشابهة لتصفية الاتصال مع GitHub.</p>\n</li>\n<li>\n<p>قد تكون هناك بعض القيود أو المشاكل في الشبكة في حال قمت بتطبيق هذه الإعدادات بشكل غير دقيق.</p>\n</li>\n<li>\n<p>إذا استمر GitHub في العمل بدون VPN، تحقق مما إذا كان <code>pf</code> مفعلاً باستخدام:</p>\n</li>\n</ul>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-bash\" data-lang=\"bash\">  sudo pfctl -s info\n</code></pre></div><ul>\n<li>تأكد من تحميل القواعد بشكل صحيح:</li>\n</ul>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-bash\" data-lang=\"bash\">sudo pfctl -s rules | grep github\n</code></pre></div><ul>\n<li>تحقق من أن واجهة VPN التي استخدمتها صحيحة عبر:</li>\n</ul>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-bash\" data-lang=\"bash\">ifconfig | grep utun\n</code></pre></div><!-- raw HTML omitted -->\n<h3 id=\"المراجع\">المراجع</h3>\n<ul>\n<li><strong>pf (Packet Filter) على macOS</strong> – <!-- raw HTML omitted -->وثائق<!-- raw HTML omitted --></li>\n<li><strong>ميزة Kill Switch في VPN</strong> – تحقق من وثائق مزود الـ VPN الخاص بك لمعرفة ما إذا كان يدعم هذه الميزة. <!-- raw HTML omitted -->معلومات عامة عن الميزة<!-- raw HTML omitted --></li>\n<li><strong>نطاقات IP العامة الخاصة بـ GitHub</strong> – <!-- raw HTML omitted -->وثائق GitHub<!-- raw HTML omitted --></li>\n<li><strong>API لجلب نطاقات GitHub العامة</strong> – <!-- raw HTML omitted -->GitHub REST API<!-- raw HTML omitted --></li>\n</ul>\n<!-- raw HTML omitted -->\n<p>أرجو أن يكون هذا الحل مفيدًا لكم! إذا كان لديكم أي أسئلة أو طرق أخرى تعمل في مناطق محجوبة، لا تترددوا في مشاركتها معنا.</p>\n<hr>\n<p>لأي استفسارات أو ملاحظات، يمكنك التواصل معي عبر لينكدإن أو من خلال صفحة <a href=\"https://hamzarabah.com/ask-me-anything/\">عندك سؤال</a>.<br>\nولا تنسوني من دعائكم.<br>\nسلام!</p>\n<!-- raw HTML omitted -->\n<p>\n    <button class=\"tinylytics_kudos\" data-path=\"/2025/03/06/github.html\"></button>\n<!-- raw HTML omitted --></p>\n",
				"content_text": "\r\n\r\nبسبب العقوبات الأمريكية، تُحظر العديد من الخدمات والمواقع في سوريا، ولا يمكن الوصول إليها إلا عبر VPN. بينما تمنع معظم هذه المواقع أي اتصال من سوريا تمامًا، يختلف GitHub قليلًا: فهو يسمح ببعض الخدمات، لكنه قد يحظر حسابك إذا اكتشف موقعك. وهذا يجعل استخدامه أكثر تعقيدًا.  \r\nلكن هذا يزيد من تعقيد الأمور في سوريا، فقد تنسى تشغيل الـ VPN، مما قد يؤدي إلى اكتشاف GitHub لموقعك وحظر حسابك من الخدمات الأخرى.  \r\nوقد تتصل بعض البرامج تلقائيًا بـ GitHub دون أن تنتبه، مما يعرضك للحظر.  \r\n\r\n\r\nنظرًا لعملي في المجال التقني عن بعد مع العديد من الشركات، وبحكم أن GitHub هو أحد أكثر المواقع استخدامًا من قبل الشركات للمشاريع البرمجية وإدارة الأكواد، ليس لدي خيار سوى استخدامه، وإلا سأضطر لتغيير الشركة! :)  \r\n\r\n\r\n<br>\r\n\r\n\r\n### لماذا لا يكفي استخدام VPN فقط؟\r\n\r\n\r\nالمشكلة أن ليست كل خدمات الـ VPN تدعم Kill Switch، وحتى إن دعمتها، فقد يتوقف الـ VPN فجأة أو يبطئ الإنترنت. في بعض الأحيان، يقوم GitHub باكتشاف أنني أستخدمه من سوريا ويقوم بحظر حسابي.\r\n\r\n\r\nهذه الحلول ليست مثالية بالنسبة لي، حيث أنني لا أحب فتح الـ VPN باستمرار، لأن ذلك يؤدي إلى تباطؤ الإنترنت. (في سوريا، الإنترنت ضعيف في الأساس، فزيادة البطء ليست خيارًا جيدًا). بالإضافة إلى ذلك، تزيد الإعلانات على المواقع عندما أكون متصلًا عبر VPN، أما في سوريا، الحمد لله، لا تظهر لي أي إعلانات.\r\n\r\n\r\n<br>\r\n\r\n\r\n### الحل الذي استخدمته\r\n\r\n\r\nلذلك، توصلت إلى الحل الأفضل بالنسبة لي، والذي جربته منذ فترة طويلة ولله الحمد لم أتعرض لأي حظر منذ ذلك الحين.  \r\nالحل بسيط: قررت 'حظر GitHub قبل أن يحظرني!'\r\n\r\n\r\nلا أمزح! الفكرة هي أنني قمت بتعديل إعدادات الشبكة على جهازي بحيث تمنع أي حزمة شبكة تخرج من جهازي إلى أي IP عام خاص بـ GitHub، إلا إذا كنت متصلًا عبر VPN. \r\n\r\n\r\n(يمكنك أيضاً أتمتة هذه العملية بحيث يتم تحديث القائمة تلقائيًا باستخدام Cron Jobs، مما يضمن أن نطاقات GitHub الجديدة يتم تضمينها دون تدخل يدوي.)\r\n\r\n\r\n<br>\r\n\r\n\r\n### الطريقة على macOS\r\n\r\n\r\nكيفية إعداد macOS لحظر الاتصال بـ GitHub إلا عند الاتصال بـ VPN.\r\n\r\n\r\n#### تحديد واجهة الشبكة الخاصة بالـ VPN\r\n\r\n\r\nيجب عليك تحديد اسم واجهة الشبكة الخاصة بك:   \r\n\r\n\r\n```bash\r\n# Look at the routing table to identify VPN interfaces\r\nnetstat -rn | grep utun\r\n\r\n\r\n# Get details about all interfaces\r\nifconfig | grep utun\r\n```\r\n\r\nبالنسبة لـ ExpressVPN، عادةً ما سترى واجهة مثل utun8 أو شيء مشابه.\r\n\r\n\r\n#### الحصول على نطاقات الـ IP الخاصة بـ GitHub\r\n\r\n\r\nيقوم GitHub بنشر نطاقات الـ IP الخاصة به عبر API عامة. يمكنك استخدام هذا السكربت بلغة Python لجلب وتنظيم هذه النطاقات, توليد القواعد الخاصة التي تقوم بحظر GitHub لاضافتها للملف الخاص `pf.conf`, ثم تقوم بانشاء نسخة مؤقتة عن الملف تتضمن القواعد الجديدة, حيث يمكنك استبدال الملف الاساسي بالملف الجديد.\r\n\r\n\r\nقم بتنزيل هذا السكربت من <a href=\"https://gist.github.com/HamzaRabah/23e87c9f7376e32aba41e858567c835d\" target=\"_blank\" rel=\"noopener noreferrer\">هنا</a>, وتنفيذ هذه الأوامر التالية لإنشاء الملف الجديد:\r\n\r\n\r\n```bash\r\n# Make it executable\r\nchmod +x github_pf.py\r\n\r\n\r\n# Run the Python script\r\npython3 github_pf.py \"YOUR_VPN_INTERFACE\"\r\n```\r\n\r\n####  تطبيق القواعد\r\nبمجرد أن تقوم بتحديث ملف `pf.conf` الخاص بك، قم بتطبيق القواعد باستخدام الأوامر التالية:\r\n\r\n\r\n```bash\r\n# Validate the configuration\r\nsudo pfctl -nf /etc/pf.conf\r\n\r\n\r\n# Load the configuration\r\nsudo pfctl -f /etc/pf.conf\r\n\r\n\r\n# Enable pf if not already enabled\r\nsudo pfctl -e\r\n```\r\n\r\n<br>\r\n\r\n\r\n### ملاحظات وحل المشاكل الشائعة\r\n\r\n\r\n- هذه الطريقة فعالة ولكنها تتطلب بعض المهارات التقنية. قد تحتاج إلى بعض الوقت لتطبيقها بشكل صحيح.\r\n- إذا كنت تستخدم أنظمة أخرى مثل Windows أو Linux، ستحتاج إلى استخدام أدوات مختلفة أو طرق مشابهة لتصفية الاتصال مع GitHub.\r\n- قد تكون هناك بعض القيود أو المشاكل في الشبكة في حال قمت بتطبيق هذه الإعدادات بشكل غير دقيق.\r\n\r\n\r\n- إذا استمر GitHub في العمل بدون VPN، تحقق مما إذا كان `pf` مفعلاً باستخدام:  \r\n\r\n\r\n```bash\r\n  sudo pfctl -s info\r\n```\r\n- تأكد من تحميل القواعد بشكل صحيح:  \r\n\r\n\r\n```bash\r\nsudo pfctl -s rules | grep github\r\n```\r\n\r\n- تحقق من أن واجهة VPN التي استخدمتها صحيحة عبر:  \r\n\r\n\r\n```bash\r\nifconfig | grep utun\r\n```\r\n\r\n<br>\r\n\r\n\r\n### المراجع  \r\n\r\n\r\n- **pf (Packet Filter) على macOS** – <a href=\"https://www.manpagez.com/man/5/pf.conf/\" target=\"_blank\" rel=\"noopener noreferrer\">وثائق</a>  \r\n- **ميزة Kill Switch في VPN** – تحقق من وثائق مزود الـ VPN الخاص بك لمعرفة ما إذا كان يدعم هذه الميزة. <a href=\"https://whatismyipaddress.com/vpn-kill-switch\" target=\"_blank\" rel=\"noopener noreferrer\">معلومات عامة عن الميزة</a>  \r\n- **نطاقات IP العامة الخاصة بـ GitHub** – <a href=\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-githubs-ip-addresses\" target=\"_blank\" rel=\"noopener noreferrer\">وثائق GitHub</a>  \r\n- **API لجلب نطاقات GitHub العامة** – <a href=\"https://docs.github.com/en/rest/meta/meta?apiVersion=2022-11-28\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub REST API</a>  \r\n\r\n\r\n<br>\r\n\r\n\r\nأرجو أن يكون هذا الحل مفيدًا لكم! إذا كان لديكم أي أسئلة أو طرق أخرى تعمل في مناطق محجوبة، لا تترددوا في مشاركتها معنا.\r\n\r\n\r\n---\r\nلأي استفسارات أو ملاحظات، يمكنك التواصل معي عبر لينكدإن أو من خلال صفحة [عندك سؤال](https://hamzarabah.com/ask-me-anything/).  \r\nولا تنسوني من دعائكم.  \r\nسلام!  \r\n\r\n\r\n<br>\r\n\r\n\r\n{{< tinykudos >}}\r\n  <br>\n",
				"date_published": "2025-03-06T01:28:47+03:00",
				"url": "https://hamzarabah.com/2025/03/06/github.html",
				"tags": ["التعلم المستمر","البرمجة والتكنولوجيا"]
			},
			{
				"id": "http://hamzarabah.micro.blog/2025/02/25/155046.html",
				"title": "الشهادات في هندسة البرمجيات: هل هي معيار للكفاءة؟",
				"content_html": "<p>في عالم البرمجيات، هناك جدل مستمر حول قيمة الشهادات. هل تعني الشهادة أن حاملها كفء؟ هل يمكننا الاعتماد عليها كمؤشر على المهارة؟</p>\n<!-- raw HTML omitted -->\n<h2 id=\"لماذا-يتم-البحث-عن-الشهادات\">لماذا يتم البحث عن الشهادات؟</h2>\n<p>عندما ننظر إلى سوق العمل، نجد أن الكثير من الشركات تطلب شهادات في تقنيات معينة، مثل إدارة المشاريع، الحوسبة السحابية.<br>\nالسبب في ذلك مفهوم: <strong>الشهادات توفر معيارًا واضحًا وسريعًا لتقييم الأشخاص</strong>.<br>\nفمن الأسهل على قسم الموارد البشرية أن يفرز السير الذاتية بناءً على وجود شهادة معينة بدلًا من تحليل المشاريع والخبرة الفعلية.</p>\n<p>لكن هل هذا يعني أن الحاصل على الشهادة أكثر كفاءة من غيره؟ هنا تكمن المشكلة الأساسية.</p>\n<!-- raw HTML omitted -->\n<h2 id=\"الشهادة-لا-تعني-الكفاءة-دائما\">الشهادة لا تعني الكفاءة دائمًا</h2>\n<p>في كثير من الأحيان، يكون الحصول على شهادة مجرد إثبات لقدرة الشخص على اجتياز اختبار، وليس بالضرورة على حل المشكلات البرمجية المعقدة أو بناء أنظمة حقيقية.</p>\n<p>هناك العديد من المحترفين الذين يتمتعون بخبرة عالية ومهارات قوية دون أن يمتلكوا أي شهادات رسمية، بينما نجد آخرين يحملون شهادات متعددة لكنهم يواجهون صعوبة عند التعامل مع تحديات العمل الفعلي.</p>\n<!-- raw HTML omitted -->\n<!-- raw HTML omitted -->\n<h2 id=\"المشكلة-في-طريقة-منح-الشهادات\">المشكلة في طريقة منح الشهادات</h2>\n<p>العديد من الشهادات تعتمد على اختبارات نظرية أو أسئلة اختيار من متعدد، مما يجعل من الممكن الحصول عليها من خلال الحفظ فقط، دون تطبيق عملي حقيقي.<br>\nفي المقابل، بناء الأنظمة الفعالة وحل المشاكل البرمجية يتطلب مهارات لا يمكن قياسها من خلال اختبار فقط.</p>\n<!-- raw HTML omitted -->\n<h2 id=\"متى-تكون-الشهادات-مفيدة\">متى تكون الشهادات مفيدة؟</h2>\n<p>بالرغم من ما سبق، لا يعني هذا أن الشهادات بلا قيمة تمامًا. قد تكون مفيدة في بعض الحالات، مثل:</p>\n<ul>\n<li><strong>الدخول إلى المجال لأول مرة:</strong> إذا كنت جديدًا في عالم البرمجة، قد تساعدك الشهادة على <strong>فتح بعض الأبواب</strong>.</li>\n<li><strong>تعلم أساسيات جديدة:</strong> بعض الشهادات توفر مسارًا تعليميًا منظمًا يساعد في فهم التقنيات الحديثة.</li>\n<li><strong>متطلبات الشركة:</strong> في بعض الشركات، قد تكون الشهادات مطلوبة للترقيات أو العمل مع عملاء معينين.</li>\n</ul>\n<p>لكنها <strong>ليست، ولا يجب أن تكون، العامل الوحيد في تقييم الكفاءة</strong>.</p>\n<!-- raw HTML omitted -->\n<h2 id=\"الشهادات-وبرامج-الشراكة\">الشهادات وبرامج الشراكة</h2>\n<p>في بعض الحالات، لا تكون الشهادات مطلوبة فقط للأفراد، بل للشركات أيضًا.<br>\nبرامج مثل <strong>Microsoft Partner Network</strong> أو <strong>AWS Partner Program</strong> تشترط أن يكون لدى الشركات عدد معين من الموظفين المعتمدين للحصول على مزايا مثل الدعم الفني أو فرص مشاريع أكبر.<br>\nفي هذه الحالات، تصبح الشهادات مجرد <strong>متطلب رسمي</strong> أكثر من كونها دليلًا على المهارة الفعلية، مما يدفع بعض الشركات لتشجيع موظفيها على الحصول عليها بغض النظر عن قيمتها العملية.</p>\n<!-- raw HTML omitted -->\n<h2 id=\"الخلاصة\">الخلاصة</h2>\n<p>الشهادات يمكن أن تكون <strong>مفيدة في بعض السياقات، لكنها ليست دليلًا قاطعًا على المهارة الحقيقية</strong>.<br>\nالمبرمج الجيد لا يتم تقييمه بعدد الشهادات التي يحملها، بل بما يستطيع إنجازه في الواقع. إذا كان علينا أن نختار بين شخص يحمل شهادة لكنه يفتقر إلى الخبرة، وآخر لديه خبرة عملية قوية دون شهادات، فإن الخيار واضح.<br>\nفي مقالات لاحقة, سوف اتحدث مفصلاً عن موضوع تقييم مهندسي البرمجيات.</p>\n<!-- raw HTML omitted -->\n<h2 id=\"ماذا-عنك\">ماذا عنك؟</h2>\n<p>هل حصلت على شهادات برمجية من قبل؟ هل شعرت أنها ساعدتك فعلًا أم كانت مجرد ورقة؟</p>\n<hr>\n<p>إذا كان لديك أي أسئلة أو ملاحظات، يمكنك التواصل معي عبر لينكدإن. ولا تنسوني من دعائكم.<br>\nسلام!</p>\n<!-- raw HTML omitted -->\n<p>\n    <button class=\"tinylytics_kudos\" data-path=\"/2025/02/25/155046.html\"></button>\n<!-- raw HTML omitted --></p>\n",
				"content_text": "في عالم البرمجيات، هناك جدل مستمر حول قيمة الشهادات. هل تعني الشهادة أن حاملها كفء؟ هل يمكننا الاعتماد عليها كمؤشر على المهارة؟\r\n\r\n\r\n<br>\r\n\r\n\r\n## لماذا يتم البحث عن الشهادات؟    \r\nعندما ننظر إلى سوق العمل، نجد أن الكثير من الشركات تطلب شهادات في تقنيات معينة، مثل إدارة المشاريع، الحوسبة السحابية.  \r\nالسبب في ذلك مفهوم: **الشهادات توفر معيارًا واضحًا وسريعًا لتقييم الأشخاص**.  \r\nفمن الأسهل على قسم الموارد البشرية أن يفرز السير الذاتية بناءً على وجود شهادة معينة بدلًا من تحليل المشاريع والخبرة الفعلية.  \r\n\r\n\r\nلكن هل هذا يعني أن الحاصل على الشهادة أكثر كفاءة من غيره؟ هنا تكمن المشكلة الأساسية.\r\n\r\n\r\n<br>\r\n\r\n\r\n## الشهادة لا تعني الكفاءة دائمًا  \r\nفي كثير من الأحيان، يكون الحصول على شهادة مجرد إثبات لقدرة الشخص على اجتياز اختبار، وليس بالضرورة على حل المشكلات البرمجية المعقدة أو بناء أنظمة حقيقية.  \r\n\r\n\r\nهناك العديد من المحترفين الذين يتمتعون بخبرة عالية ومهارات قوية دون أن يمتلكوا أي شهادات رسمية، بينما نجد آخرين يحملون شهادات متعددة لكنهم يواجهون صعوبة عند التعامل مع تحديات العمل الفعلي.  \r\n\r\n\r\n<br>\r\n<img src=\"https://i.imgflip.com/9lfe39.jpg\" alt=\"Alt text\" style=\"border: 2px solid black; border-radius: 5px;\">\r\n\r\n\r\n<br>\r\n\r\n\r\n## المشكلة في طريقة منح الشهادات   \r\nالعديد من الشهادات تعتمد على اختبارات نظرية أو أسئلة اختيار من متعدد، مما يجعل من الممكن الحصول عليها من خلال الحفظ فقط، دون تطبيق عملي حقيقي.  \r\nفي المقابل، بناء الأنظمة الفعالة وحل المشاكل البرمجية يتطلب مهارات لا يمكن قياسها من خلال اختبار فقط.  \r\n\r\n\r\n<br>\r\n\r\n\r\n## متى تكون الشهادات مفيدة؟  \r\nبالرغم من ما سبق، لا يعني هذا أن الشهادات بلا قيمة تمامًا. قد تكون مفيدة في بعض الحالات، مثل:  \r\n- **الدخول إلى المجال لأول مرة:** إذا كنت جديدًا في عالم البرمجة، قد تساعدك الشهادة على **فتح بعض الأبواب**.  \r\n- **تعلم أساسيات جديدة:** بعض الشهادات توفر مسارًا تعليميًا منظمًا يساعد في فهم التقنيات الحديثة.  \r\n- **متطلبات الشركة:** في بعض الشركات، قد تكون الشهادات مطلوبة للترقيات أو العمل مع عملاء معينين.  \r\n\r\n\r\nلكنها **ليست، ولا يجب أن تكون، العامل الوحيد في تقييم الكفاءة**.  \r\n\r\n\r\n<br>\r\n\r\n\r\n## الشهادات وبرامج الشراكة  \r\nفي بعض الحالات، لا تكون الشهادات مطلوبة فقط للأفراد، بل للشركات أيضًا.  \r\nبرامج مثل **Microsoft Partner Network** أو **AWS Partner Program** تشترط أن يكون لدى الشركات عدد معين من الموظفين المعتمدين للحصول على مزايا مثل الدعم الفني أو فرص مشاريع أكبر.  \r\nفي هذه الحالات، تصبح الشهادات مجرد **متطلب رسمي** أكثر من كونها دليلًا على المهارة الفعلية، مما يدفع بعض الشركات لتشجيع موظفيها على الحصول عليها بغض النظر عن قيمتها العملية.  \r\n\r\n\r\n<br>\r\n\r\n\r\n## الخلاصة  \r\nالشهادات يمكن أن تكون **مفيدة في بعض السياقات، لكنها ليست دليلًا قاطعًا على المهارة الحقيقية**.  \r\nالمبرمج الجيد لا يتم تقييمه بعدد الشهادات التي يحملها، بل بما يستطيع إنجازه في الواقع. إذا كان علينا أن نختار بين شخص يحمل شهادة لكنه يفتقر إلى الخبرة، وآخر لديه خبرة عملية قوية دون شهادات، فإن الخيار واضح.  \r\nفي مقالات لاحقة, سوف اتحدث مفصلاً عن موضوع تقييم مهندسي البرمجيات.\r\n\r\n\r\n<br>\r\n\r\n\r\n## ماذا عنك؟  \r\nهل حصلت على شهادات برمجية من قبل؟ هل شعرت أنها ساعدتك فعلًا أم كانت مجرد ورقة؟  \r\n\r\n\r\n---\r\nإذا كان لديك أي أسئلة أو ملاحظات، يمكنك التواصل معي عبر لينكدإن. ولا تنسوني من دعائكم.  \r\nسلام!  \r\n\r\n\r\n<br>\r\n\r\n\r\n{{< tinykudos >}}\r\n  <br>\n",
				"date_published": "2025-02-25T15:50:46+03:00",
				"url": "https://hamzarabah.com/2025/02/25/155046.html",
				"tags": ["التعلم المستمر","البرمجة والتكنولوجيا"]
			},
			{
				"id": "http://hamzarabah.micro.blog/2025/02/23/100835.html",
				"title": "وهم الميزات (3): كيف نعيد التوازن لبناء المنتجات الرقمية؟",
				"content_html": "<h1 id=\"سلسلة-وهم-الميزات-مقابل-القيمة-الحقيقية-للمنتجات-الرقمية\">سلسلة: وهم الميزات مقابل القيمة الحقيقية للمنتجات الرقمية</h1>\n<!-- raw HTML omitted -->\n<h2 id=\"الجزء-الثالث-المشاكل-في-المنظومة-وإعادة-التوازن\">الجزء الثالث: المشاكل في المنظومة وإعادة التوازن</h2>\n<!-- raw HTML omitted -->\n<h2 id=\"أكبر-مشكلة-في-بناء-المنتجات-مرحلة-الفكرة\">أكبر مشكلة في بناء المنتجات: مرحلة الفكرة</h2>\n<p>المشكلة الكبرى في دورة حياة المنتج هي كثرة الأفكار. في أي شركة، ستجد أن الجميع لديه أفكار جديدة: المستخدمون، الفريق، المديرون، الجميع! وكلما كبر المنتج وزاد نجاحه، زاد عدد الأفكار المطروحة.</p>\n<p>ولكن هنا المشكلة الثانية: معظم هذه الأفكار سيئة!</p>\n<p>قد يكون هذا الكلام صادمًا، لكنه حقيقي. معظم الشركات الناشئة تفشل، ومع ذلك، الفرق دائمًا متحمسة جدًا لأفكارها الجديدة.</p>\n<h3 id=\"لماذا-لا-نستطيع-معرفة-أن-فكرة-ما-سيئة\">لماذا لا نستطيع معرفة أن فكرة ما سيئة؟</h3>\n<p>في الشركات الناشئة، الجميع يدرك أن نسبة الفشل عالية، ومع ذلك، الجميع متحمس ويعتقد أن فكرته بالتحديد هي الاستثناء ولن تفشل.</p>\n<h3 id=\"وهم-اليقين\">وهم اليقين</h3>\n<p>لماذا نعتقد دائمًا أن أفكارنا هي الاستثناء الناجح رغم معرفتنا بأن معدل الفشل مرتفع؟ هذا بسبب انحياز معرفي يجعلنا نرى أفكارنا بأنها أكثر تميزًا من غيرها.</p>\n<h2 id=\"كيف-نعيد-التوازن\">كيف نعيد التوازن؟</h2>\n<p>لحل هذه المشاكل، يجب علينا تغيير طريقة التفكير حول تطوير المنتجات:</p>\n<p>✅ نبني أفكارًا أقل<br>\n✅ نقلل المخرجات<br>\n✅ نضاعف النتائج والتأثير</p>\n<p>المنتجات الرقمية لا تترك العالم كما هو، بل تغيّره حتمًا. أحيانًا يكون التغيير إيجابيًا، مثل تحسين حياة المستخدمين أو تسهيل أعمالهم، لكن في بعض الأحيان قد يكون التغيير سلبيًا، مثل إدمان الاستخدام أو التأثير على الخصوصية. إدراك هذه الحقيقة يساعدنا على بناء منتجات ذات قيمة حقيقية، ويدفعنا لتحمل مسؤولية التأثير الذي نتركه.</p>\n<p>استخدام مصطلحات مثل المخرجات، النتائج، والتأثير داخل الشركات والفرق يساعد على توضيح الصورة بشكل أكبر من استخدام مصطلحات غامضة مثل &ldquo;أهداف&rdquo; أو &ldquo;غايات&rdquo;. وهذا هو الفرق بين عقلية بناء المشاريع التي تركز على المخرجات، و<strong>عقلية بناء المنتجات</strong> التي تركز على النتائج والتأثير.</p>\n<hr>\n<h2 id=\"خاتمة-السلسلة\">خاتمة السلسلة</h2>\n<p>اتمنى أن تكون هذه السلسلة قد قدمت لك منظورًا جديدًا حول بناء المنتجات الرقمية. إذا كان لديك أي أسئلة أو ملاحظات، يمكنك التواصل معي عبر لينكدإن. ولا تنسوني من دعائكم.</p>\n<p>سلام!</p>\n<p><a href=\"https://hamzarabah.com/2025/02/23/100711.html\">🔗 العودة إلى الجزء الثاني</a></p>\n<!-- raw HTML omitted -->\n\n    <button class=\"tinylytics_kudos\" data-path=\"/2025/02/23/100835.html\"></button>\n",
				"content_text": "# سلسلة: وهم الميزات مقابل القيمة الحقيقية للمنتجات الرقمية  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<br> \r\n\r\n\r\n\r\n\r\n## الجزء الثالث: المشاكل في المنظومة وإعادة التوازن  \r\n\r\n\r\n\r\n\r\n<br> \r\n<br> \r\n\r\n\r\n\r\n\r\n## أكبر مشكلة في بناء المنتجات: مرحلة الفكرة  \r\nالمشكلة الكبرى في دورة حياة المنتج هي كثرة الأفكار. في أي شركة، ستجد أن الجميع لديه أفكار جديدة: المستخدمون، الفريق، المديرون، الجميع! وكلما كبر المنتج وزاد نجاحه، زاد عدد الأفكار المطروحة.  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nولكن هنا المشكلة الثانية: معظم هذه الأفكار سيئة!  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nقد يكون هذا الكلام صادمًا، لكنه حقيقي. معظم الشركات الناشئة تفشل، ومع ذلك، الفرق دائمًا متحمسة جدًا لأفكارها الجديدة.  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### لماذا لا نستطيع معرفة أن فكرة ما سيئة؟  \r\nفي الشركات الناشئة، الجميع يدرك أن نسبة الفشل عالية، ومع ذلك، الجميع متحمس ويعتقد أن فكرته بالتحديد هي الاستثناء ولن تفشل.  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### وهم اليقين  \r\n\r\n\r\n\r\n\r\nلماذا نعتقد دائمًا أن أفكارنا هي الاستثناء الناجح رغم معرفتنا بأن معدل الفشل مرتفع؟ هذا بسبب انحياز معرفي يجعلنا نرى أفكارنا بأنها أكثر تميزًا من غيرها.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n## كيف نعيد التوازن؟  \r\nلحل هذه المشاكل، يجب علينا تغيير طريقة التفكير حول تطوير المنتجات:  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n✅ نبني أفكارًا أقل  \r\n✅ نقلل المخرجات  \r\n✅ نضاعف النتائج والتأثير  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nالمنتجات الرقمية لا تترك العالم كما هو، بل تغيّره حتمًا. أحيانًا يكون التغيير إيجابيًا، مثل تحسين حياة المستخدمين أو تسهيل أعمالهم، لكن في بعض الأحيان قد يكون التغيير سلبيًا، مثل إدمان الاستخدام أو التأثير على الخصوصية. إدراك هذه الحقيقة يساعدنا على بناء منتجات ذات قيمة حقيقية، ويدفعنا لتحمل مسؤولية التأثير الذي نتركه.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nاستخدام مصطلحات مثل المخرجات، النتائج، والتأثير داخل الشركات والفرق يساعد على توضيح الصورة بشكل أكبر من استخدام مصطلحات غامضة مثل \"أهداف\" أو \"غايات\". وهذا هو الفرق بين عقلية بناء المشاريع التي تركز على المخرجات، و**عقلية بناء المنتجات** التي تركز على النتائج والتأثير.  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n---  \r\n## خاتمة السلسلة  \r\nاتمنى أن تكون هذه السلسلة قد قدمت لك منظورًا جديدًا حول بناء المنتجات الرقمية. إذا كان لديك أي أسئلة أو ملاحظات، يمكنك التواصل معي عبر لينكدإن. ولا تنسوني من دعائكم.  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nسلام!  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[🔗 العودة إلى الجزء الثاني](https://hamzarabah.com/2025/02/23/100711.html)\r\n\r\n\r\n  <br>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{{< tinykudos >}}\n",
				"date_published": "2025-02-23T10:08:35+03:00",
				"url": "https://hamzarabah.com/2025/02/23/100835.html",
				"tags": ["البرمجة والتكنولوجيا","ريادة الأعمال التقنية"]
			},
			{
				"id": "http://hamzarabah.micro.blog/2025/02/23/100711.html",
				"title": "وهم الميزات (2): لماذا لا تعني المخرجات نجاح المنتج؟",
				"content_html": "<h1 id=\"سلسلة-وهم-الميزات-مقابل-القيمة-الحقيقية-للمنتجات-الرقمية\">سلسلة: وهم الميزات مقابل القيمة الحقيقية للمنتجات الرقمية</h1>\n<!-- raw HTML omitted -->\n<h2 id=\"الجزء-الثاني-المخرجات-النتائج-والتأثير\">الجزء الثاني: المخرجات، النتائج، والتأثير</h2>\n<p>معظم الفرق تركز بشكل كبير على إطلاق الميزات، لكن هل هذا هو ما يجعل المنتج ناجحًا حقًا؟ دعونا نكشف هذا الوهم.<br>\n<!-- raw HTML omitted --></p>\n<h3 id=\"المخرجات-الفخ-الذي-تقع-فيه-الشركات\">المخرجات: الفخ الذي تقع فيه الشركات</h3>\n<p>المخرجات هي كل شيء يحدث خلال دورة حياة المنتج، بدءًا من الفكرة وحتى النشر. ولكن لماذا تركز الشركات عليها بشدة؟<br>\nلأنها تكلف المال، والوقت، وهي ما يحدد نطاق المنتج (الميزات، التحسينات، المتطلبات، إلخ).</p>\n<p>ولكن هنا تكمن المشكلة: المخرجات ليست مهمة بحد ذاتها!</p>\n<p>إذا تذكرت سؤالي في الجزء الأول عن سبب إعجابك بمنتج معين، ربما لاحظت أن إجابتك لم تكن تتعلق بعدد الميزات التي يملكها المنتج أو الجهد الذي بذل في بنائه، بل بمدى فائدته وسهولة استخدامه.</p>\n<h2 id=\"النتائج-ماذا-بعد-النشر\">النتائج: ماذا بعد النشر؟</h2>\n<p>على عكس المخرجات التي نقيسها بالكلفة والوقت، يتم قياس النتائج من خلال <strong>سلوك المستخدمين بعد النشر</strong>، مثل:</p>\n<ul>\n<li>هل قام المستخدم بتجربة الميزة الجديدة؟</li>\n<li>هل استمر في استخدام المنتج؟</li>\n<li>ما مدى رضاه عن التجربة؟</li>\n</ul>\n<p>مع الأسف، معظم الفرق تركز على المخرجات وتنسى مراقبة النتائج الفعلية!</p>\n<h2 id=\"التأثير-الصورة-الأكبر\">التأثير: الصورة الأكبر</h2>\n<p>النتائج مهمة، ولكنها ليست كافية وحدها. فالشركات لديها أهداف أوسع تتعلق بالربح والاستدامة والنمو. لذا، بعد أن نحصل على نتائج إيجابية، نحتاج لقياس تأثير المنتج على مستوى الشركة، مثل:</p>\n<ul>\n<li>الحصة السوقية</li>\n<li>العائد على الاستثمار</li>\n</ul>\n<!-- raw HTML omitted -->\n<p>بالتالي، يجب أن نفهم أن** المخرجات تؤدي إلى نتائج، والنتائج بعد فترة تؤدي إلى تأثير**.</p>\n<p>حتى لو بدأنا بالتركيز على النتائج والتأثير، ما زالت هناك مشكلة أكبر: كيف نقرر أي الأفكار تستحق التنفيذ من الأساس؟ هذا ما سنناقشه في الجزء الثالث.</p>\n<hr>\n<h2 id=\"تابع-الجزء-الثالث\">تابع الجزء الثالث!</h2>\n<p>في الجزء الأخير من هذه السلسلة، سنتحدث عن المشاكل التي تواجه هذه المنظومة، ولماذا يجب علينا تغيير طريقة التفكير حول بناء المنتجات الرقمية.</p>\n<p><a href=\"https://hamzarabah.com/2025/02/23/100835.html\">🔗 اقرأ الجزء الثالث</a></p>\n<p><a href=\"https://hamzarabah.com/2025/02/23/100509.html\">🔗 العودة إلى الجزء الأول</a></p>\n<!-- raw HTML omitted -->\n<p>\n    <button class=\"tinylytics_kudos\" data-path=\"/2025/02/23/100711.html\"></button>\n<!-- raw HTML omitted --></p>\n",
				"content_text": "# سلسلة: وهم الميزات مقابل القيمة الحقيقية للمنتجات الرقمية  \n\n\n\n\n\n\n\n\n<br> \n\n\n\n\n## الجزء الثاني: المخرجات، النتائج، والتأثير  \n \n\n\n\n\nمعظم الفرق تركز بشكل كبير على إطلاق الميزات، لكن هل هذا هو ما يجعل المنتج ناجحًا حقًا؟ دعونا نكشف هذا الوهم.  \n<br> \n\n\n\n\n### المخرجات: الفخ الذي تقع فيه الشركات  \nالمخرجات هي كل شيء يحدث خلال دورة حياة المنتج، بدءًا من الفكرة وحتى النشر. ولكن لماذا تركز الشركات عليها بشدة؟  \nلأنها تكلف المال، والوقت، وهي ما يحدد نطاق المنتج (الميزات، التحسينات، المتطلبات، إلخ).  \n\n\n\n\nولكن هنا تكمن المشكلة: المخرجات ليست مهمة بحد ذاتها!  \n\n\n\n\nإذا تذكرت سؤالي في الجزء الأول عن سبب إعجابك بمنتج معين، ربما لاحظت أن إجابتك لم تكن تتعلق بعدد الميزات التي يملكها المنتج أو الجهد الذي بذل في بنائه، بل بمدى فائدته وسهولة استخدامه.  \n\n\n\n\n## النتائج: ماذا بعد النشر؟  \nعلى عكس المخرجات التي نقيسها بالكلفة والوقت، يتم قياس النتائج من خلال **سلوك المستخدمين بعد النشر**، مثل:  \n- هل قام المستخدم بتجربة الميزة الجديدة؟  \n- هل استمر في استخدام المنتج؟  \n- ما مدى رضاه عن التجربة؟  \n\n\n\n\nمع الأسف، معظم الفرق تركز على المخرجات وتنسى مراقبة النتائج الفعلية!  \n\n\n\n\n## التأثير: الصورة الأكبر  \nالنتائج مهمة، ولكنها ليست كافية وحدها. فالشركات لديها أهداف أوسع تتعلق بالربح والاستدامة والنمو. لذا، بعد أن نحصل على نتائج إيجابية، نحتاج لقياس تأثير المنتج على مستوى الشركة، مثل:  \n- الحصة السوقية  \n- العائد على الاستثمار  \n\n\n\n\n<br>\n<img src=\"https://i.imgflip.com/9l5y9b.jpg\" alt=\"Alt text\" style=\"border: 2px solid black; border-radius: 5px;\">\n<br>\n\n\n\n\nبالتالي، يجب أن نفهم أن** المخرجات تؤدي إلى نتائج، والنتائج بعد فترة تؤدي إلى تأثير**.  \n\n\n\n\n\n\n\n\nحتى لو بدأنا بالتركيز على النتائج والتأثير، ما زالت هناك مشكلة أكبر: كيف نقرر أي الأفكار تستحق التنفيذ من الأساس؟ هذا ما سنناقشه في الجزء الثالث.\n\n\n\n\n---  \n## تابع الجزء الثالث!  \nفي الجزء الأخير من هذه السلسلة، سنتحدث عن المشاكل التي تواجه هذه المنظومة، ولماذا يجب علينا تغيير طريقة التفكير حول بناء المنتجات الرقمية.  \n\n\n\n\n[🔗 اقرأ الجزء الثالث](https://hamzarabah.com/2025/02/23/100835.html)\n\n\n\n\n[🔗 العودة إلى الجزء الأول](https://hamzarabah.com/2025/02/23/100509.html)\n\n\n  <br>\n\n\n{{< tinykudos >}}\n  <br>\n",
				"date_published": "2025-02-23T10:07:11+03:00",
				"url": "https://hamzarabah.com/2025/02/23/100711.html",
				"tags": ["البرمجة والتكنولوجيا","ريادة الأعمال التقنية"]
			},
			{
				"id": "http://hamzarabah.micro.blog/2025/02/23/100509.html",
				"title": "وهم الميزات (1): ما هي القيمة الحقيقية للمنتج الرقمي؟",
				"content_html": "<h1 id=\"سلسلة-وهم-الميزات-مقابل-القيمة-الحقيقية-للمنتجات-الرقمية\">سلسلة: وهم الميزات مقابل القيمة الحقيقية للمنتجات الرقمية</h1>\n<h3 id=\"المقدمة\">المقدمة</h3>\n<p>في هذه السلسلة، سأناقش القيمة الحقيقية للمنتجات الرقمية، دورة حياة المنتج الرقمي، والعناوين الأساسية التي يجب أن تطرحها الشركات والفرق التي تقدم منتجات رقمية. كما سنتحدث عن المؤشرات التي تستحق التركيز أكثر من غيرها.</p>\n<!-- raw HTML omitted -->\n<h2 id=\"الجزء-الأول-القيمة-الحقيقية-ودورة-حياة-المنتج-الرقمي\">الجزء الأول: القيمة الحقيقية ودورة حياة المنتج الرقمي</h2>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<h2 id=\"القيمة-الحقيقية-للمنتج-الرقمي\">القيمة الحقيقية للمنتج الرقمي</h2>\n<!-- raw HTML omitted -->\n<p>قبل أن نتحدث عن القيمة، دعني أسألك: بالتأكيد أنت تستخدم العديد من المنتجات الرقمية في حياتك، فكر للحظة، ما الذي يجعلك تحب منتجًا رقميًا وتصفه بأنه رائع وناجح؟</p>\n<p>إذا أردت أن أخمن، ربما تقول إنه سهل الاستخدام، أو أنه يحل مشكلة معينة، أو أن الكثير من الناس يستخدمونه، أو ربما يساعدك في تحقيق أرباح، وغيرها من الأسباب.</p>\n<h3 id=\"لكن-ما-هي-القيمة-الحقيقية\">لكن ما هي القيمة الحقيقية؟</h3>\n<p>القيمة الحقيقية لأي منتج رقمي تكمن في تأثيره على العالم. كل منتج يتم بناؤه يؤدي إلى تغيير في سلوك الناس، في طريقة عملهم، أو حتى في كيفية تفاعلهم مع بعضهم البعض. هذا التغيير قد يكون إيجابيًا، لكنه قد يكون سلبيًا أيضًا.<br>\nالمهم هو أننا، كمطوّري منتجات رقمية، يجب أن ندرك قوة هذا التأثير ونسعى لجعله في الاتجاه الصحيح.<br>\nفهم هذا المفهوم أساسي لأنه يحدد كيف ننظر إلى دورة حياة المنتج بالكامل.<br>\n<!-- raw HTML omitted -->\n<!-- raw HTML omitted -->\n<!-- raw HTML omitted --></p>\n<h2 id=\"دورة-حياة-المنتج-الرقمي\">دورة حياة المنتج الرقمي</h2>\n<!-- raw HTML omitted -->\n<p>لنفهم كيف يتطور المنتج الرقمي، دعونا نمر سريعًا على المراحل الأساسية التي يمر بها:</p>\n<h3 id=\"1-مرحلة-الفكرة\">1. مرحلة الفكرة</h3>\n<p>تبدأ القصة عندما نلاحظ وجود مشكلة يعاني منها المستخدمون، أو عندما نلاحظ أن منتجًا حاليًا لا يرضي المستخدمين أو يسبب لهم ارتباكًا، وهنا تبدأ الأفكار بالظهور لتحسينه أو إضافة ميزة جديدة.</p>\n<h3 id=\"2-مرحلة-البناء\">2. مرحلة البناء</h3>\n<p>في هذه المرحلة، يتم تنفيذ الفكرة وتحويلها إلى منتج أو ميزة جديدة. بغض النظر عن طريقة البناء، هذه المرحلة تتطلب التخطيط والتنفيذ الفعلي. سنتحدث عنها بتفصيل أكثر في مقالات قادمة.</p>\n<h3 id=\"3-مرحلة-النشر-أو-الإطلاق\">3. مرحلة النشر أو الإطلاق</h3>\n<p>بعد الانتهاء من البناء، يتم نشر المنتج أو الميزة الجديدة، ونأمل أن يتمكن المستخدمون من حل مشكلاتهم وأن تتحسن تجربتهم مع المنتج.</p>\n<p>لكن هل مجرد المرور بهذه المراحل يعني أننا نبني منتجًا ناجحًا؟ ليس بالضرورة. في الجزء القادم، سنناقش لماذا التركيز على المخرجات فقط قد يكون فخًا يقع فيه الكثيرون.</p>\n<hr>\n<h2 id=\"تابع-الجزء-الثاني\">تابع الجزء الثاني</h2>\n<p>في الجزء القادم، سنتحدث عن الفرق بين <strong>المخرجات، النتائج، والتأثير</strong>، ولماذا يجب أن نركز على بعضها أكثر من غيرها. لا تفوت هذا النقاش الهام!</p>\n<p><a href=\"https://hamzarabah.com/2025/02/23/100711.html\">اقرأ الجزء الثاني</a></p>\n<!-- raw HTML omitted -->\n<p>\n    <button class=\"tinylytics_kudos\" data-path=\"/2025/02/23/100509.html\"></button>\n<!-- raw HTML omitted --></p>\n",
				"content_text": "# سلسلة: وهم الميزات مقابل القيمة الحقيقية للمنتجات الرقمية  \n\n\n\n\n### المقدمة  \nفي هذه السلسلة، سأناقش القيمة الحقيقية للمنتجات الرقمية، دورة حياة المنتج الرقمي، والعناوين الأساسية التي يجب أن تطرحها الشركات والفرق التي تقدم منتجات رقمية. كما سنتحدث عن المؤشرات التي تستحق التركيز أكثر من غيرها.  \n\n\n\n\n<br> \n\n\n\n\n## الجزء الأول: القيمة الحقيقية ودورة حياة المنتج الرقمي  \n   \n   <br><br>\n\n\n\n\n## القيمة الحقيقية للمنتج الرقمي    \n<br>\n\n\n\n\nقبل أن نتحدث عن القيمة، دعني أسألك: بالتأكيد أنت تستخدم العديد من المنتجات الرقمية في حياتك، فكر للحظة، ما الذي يجعلك تحب منتجًا رقميًا وتصفه بأنه رائع وناجح؟  \n\n\n\n\nإذا أردت أن أخمن، ربما تقول إنه سهل الاستخدام، أو أنه يحل مشكلة معينة، أو أن الكثير من الناس يستخدمونه، أو ربما يساعدك في تحقيق أرباح، وغيرها من الأسباب.  \n\n\n\n\n### لكن ما هي القيمة الحقيقية؟  \nالقيمة الحقيقية لأي منتج رقمي تكمن في تأثيره على العالم. كل منتج يتم بناؤه يؤدي إلى تغيير في سلوك الناس، في طريقة عملهم، أو حتى في كيفية تفاعلهم مع بعضهم البعض. هذا التغيير قد يكون إيجابيًا، لكنه قد يكون سلبيًا أيضًا.  \nالمهم هو أننا، كمطوّري منتجات رقمية، يجب أن ندرك قوة هذا التأثير ونسعى لجعله في الاتجاه الصحيح.  \nفهم هذا المفهوم أساسي لأنه يحدد كيف ننظر إلى دورة حياة المنتج بالكامل.  \n<br>\n<img src=\"https://i.imgflip.com/9l42rz.jpg\" alt=\"Alt text\" style=\"border: 2px solid black; border-radius: 5px;\">\n<br>\n\n\n\n\n## دورة حياة المنتج الرقمي  \n<br>\n\n\n\n\nلنفهم كيف يتطور المنتج الرقمي، دعونا نمر سريعًا على المراحل الأساسية التي يمر بها:  \n\n\n\n\n### 1. مرحلة الفكرة  \nتبدأ القصة عندما نلاحظ وجود مشكلة يعاني منها المستخدمون، أو عندما نلاحظ أن منتجًا حاليًا لا يرضي المستخدمين أو يسبب لهم ارتباكًا، وهنا تبدأ الأفكار بالظهور لتحسينه أو إضافة ميزة جديدة.  \n\n\n\n\n### 2. مرحلة البناء  \nفي هذه المرحلة، يتم تنفيذ الفكرة وتحويلها إلى منتج أو ميزة جديدة. بغض النظر عن طريقة البناء، هذه المرحلة تتطلب التخطيط والتنفيذ الفعلي. سنتحدث عنها بتفصيل أكثر في مقالات قادمة.  \n\n\n\n\n### 3. مرحلة النشر أو الإطلاق  \nبعد الانتهاء من البناء، يتم نشر المنتج أو الميزة الجديدة، ونأمل أن يتمكن المستخدمون من حل مشكلاتهم وأن تتحسن تجربتهم مع المنتج.  \n\n\n\n\nلكن هل مجرد المرور بهذه المراحل يعني أننا نبني منتجًا ناجحًا؟ ليس بالضرورة. في الجزء القادم، سنناقش لماذا التركيز على المخرجات فقط قد يكون فخًا يقع فيه الكثيرون.\n\n\n\n\n---  \n\n\n\n\n## تابع الجزء الثاني  \nفي الجزء القادم، سنتحدث عن الفرق بين **المخرجات، النتائج، والتأثير**، ولماذا يجب أن نركز على بعضها أكثر من غيرها. لا تفوت هذا النقاش الهام!  \n\n\n\n\n[اقرأ الجزء الثاني](https://hamzarabah.com/2025/02/23/100711.html)\n\n\n  <br>\n\n\n\n\n{{< tinykudos >}}\n  <br>\n",
				"date_published": "2025-02-23T10:05:09+03:00",
				"url": "https://hamzarabah.com/2025/02/23/100509.html",
				"tags": ["البرمجة والتكنولوجيا","ريادة الأعمال التقنية"]
			},
			{
				"id": "http://hamzarabah.micro.blog/2025/02/13/prohelpify.html",
				"title": "انضمامي لمنصة Prohelpify 🎉  ",
				"content_html": "<p>حابب خبركن إني صرت جزء من <a href=\"https://prohelpify.com/ar\">Prohelpify</a>، المنصة المجانية يلي بتساعد أي حدا بمجال البرمجة يحصل على توجيه من ناس عندن خبرة طويلة، سواء كنت مبتدئ أو حتى عندك خبرة وعم تواجه مشاكل بتقنيات أو مشاريع معينة.</p>\n<p>كلنا لما بدينا كان في عنا أسئلة كتيرة: <strong>شو لازم نتعلم؟ كيف نلاقي شغل؟ شو المهارات المطلوبة؟</strong> والأصعب إنو ما كان في حدا يوجّهنا بطريقة واضحة. بس اليوم، صار فيك تحجز جلسة مجانية وتحكي مع شخص عنده خبرة، يعطيك نصائح تساعدك تاخد قرارات صح بمسيرتك المهنية.</p>\n<h2 id=\"والمنصة-مو-بس-للمبتدئين\">والمنصة مو بس للمبتدئين!</h2>\n<p>حتى لو كنت مهندس برمجيات عندك خبرة، أكيد واجهت مواقف صعبة أو مشاكل تقنية بشغلك أو مشروعك. لا تخلي الأنا تمنعك من تسأل!<br>\n<strong>التعلم متل الصندوق، والمفتاح هو السؤال.</strong> لا تخجل، ولا تفكر إنك لازم تعرف كل شي لحالك.</p>\n<p><strong>المنصة مجانية 100%، وما في أي التزامات.</strong> احجز جلسة، جرب، وشوف كيف ممكن تستفيد!</p>\n<p><strong>جرّبها من هون:</strong> <a href=\"https://prohelpify.com/ar\">Prohelpify</a><br>\n<!-- raw HTML omitted --></p>\n\n    <button class=\"tinylytics_kudos\" data-path=\"/2025/02/13/prohelpify.html\"></button>\n",
				"content_text": "\n\nحابب خبركن إني صرت جزء من [Prohelpify](https://prohelpify.com/ar)، المنصة المجانية يلي بتساعد أي حدا بمجال البرمجة يحصل على توجيه من ناس عندن خبرة طويلة، سواء كنت مبتدئ أو حتى عندك خبرة وعم تواجه مشاكل بتقنيات أو مشاريع معينة.  \n\n\n\n\nكلنا لما بدينا كان في عنا أسئلة كتيرة: **شو لازم نتعلم؟ كيف نلاقي شغل؟ شو المهارات المطلوبة؟** والأصعب إنو ما كان في حدا يوجّهنا بطريقة واضحة. بس اليوم، صار فيك تحجز جلسة مجانية وتحكي مع شخص عنده خبرة، يعطيك نصائح تساعدك تاخد قرارات صح بمسيرتك المهنية.  \n\n\n\n\n## والمنصة مو بس للمبتدئين!  \nحتى لو كنت مهندس برمجيات عندك خبرة، أكيد واجهت مواقف صعبة أو مشاكل تقنية بشغلك أو مشروعك. لا تخلي الأنا تمنعك من تسأل!  \n**التعلم متل الصندوق، والمفتاح هو السؤال.** لا تخجل، ولا تفكر إنك لازم تعرف كل شي لحالك.  \n\n\n\n\n**المنصة مجانية 100%، وما في أي التزامات.** احجز جلسة، جرب، وشوف كيف ممكن تستفيد!  \n\n\n\n\n**جرّبها من هون:** [Prohelpify](https://prohelpify.com/ar)  \n  <br>\n\n{{< tinykudos >}}\n",
				"date_published": "2025-02-13T16:14:00+03:00",
				"url": "https://hamzarabah.com/2025/02/13/prohelpify.html",
				"tags": ["التعلم المستمر","البرمجة والتكنولوجيا"]
			},
			{
				"id": "http://hamzarabah.micro.blog/2025/02/01/git.html",
				"title": "آلية عمل Git - مقدمة",
				"content_html": "<h1 id=\"مقدمة\">مقدمة</h1>\n<p>من المهم جدًا لأي مطوّر برمجيات (بغض النظر عن اختصاصه ومستواه) أن يكون قادرًا على استخدام <strong>Git</strong>.<br>\nلتحقيق ذلك، يمكننا حفظ بعض التعليمات والخطوات والعمل بها دون الحاجة إلى فهم آلية عملها.</p>\n<p>لكن، نظرًا لأهمية <strong>Git</strong> وكونه أداة أساسية <strong>لا غنى عنها</strong> في تطوير البرمجيات، فإن <strong>استيعاب آلية عمله</strong> سيجعل استخدامه أسهل وأكثر فاعلية، وسيساعدنا على <strong>اكتساب الثقة</strong> عند التعامل معه.</p>\n<p>لذلك، سأقوم بكتابة <a href=\"https://hamzarabah.com/categories/git/\">مجموعة من المقالات</a> لتسليط الضوء على <strong>آلية عمل Git</strong> وبعض المواضيع المتقدمة حوله.</p>\n<h2 id=\"محتوى-المقالة\">محتوى المقالة</h2>\n<p>في هذه المقالة، سنتعرف على:</p>\n<ul>\n<li>تعريف <strong>Git</strong></li>\n<li>خصائصه وفوائده</li>\n<li>سلبياته وحدوده</li>\n<li>قصة نشأته وتطوّره</li>\n</ul>\n<hr>\n<h1 id=\"ما-هو-git\">ما هو Git؟</h1>\n<p>هو في الأساس <strong>نظام ملفات بأسلوب عنونة المحتوى</strong>، وتم بناء <strong>نظام موزّع للتحكم في الإصدارات</strong> فوق هذا النظام.</p>\n<p>قد تبدو هذه الجملة معقدة، لذا دعونا نحلل مكوناتها:</p>\n<h3 id=\"1-نظام-الملفات-file-system\">1. نظام الملفات (File System)</h3>\n<p>يقوم <strong>نظام الملفات</strong> بتنظيم الملفات، تخزينها، والوصول إليها على جهاز التخزين.</p>\n<h3 id=\"2-نظام-ملفات-بأسلوب-عنونة-المحتوى-content-addressable-file-system\">2. نظام ملفات بأسلوب عنونة المحتوى (Content-Addressable File System)</h3>\n<ul>\n<li>في أنظمة التشغيل التقليدية (مثل ويندوز ولينكس)، يتم <strong>تخزين الملفات في مواقع محددة</strong> على جهاز التخزين، ويمكن الوصول إليها عبر <strong>مسار الملف</strong> (Location-Addressable).</li>\n<li>أما في <strong>أسلوب عنونة المحتوى</strong>، يتم <strong>تخزين الملفات بناءً على محتواها</strong> وليس موقعها، ويمكن الوصول إليها عبر <strong>معرّف خاص (Unique Hash)</strong> يستند إلى محتواها.</li>\n<li>سيتم التحدث عن هذا الموضوع بشكل أعمق في مقالات لاحقة.</li>\n</ul>\n<h3 id=\"3-نظام-التحكم-في-الإصدارات-version-control-system\">3. نظام التحكم في الإصدارات (Version Control System)</h3>\n<p>هو نظام يقوم بـ <strong>تتبع وتسجيل التغييرات</strong> التي تحدث على ملف أو مجموعة من الملفات عبر الزمن، بحيث يمكنك الرجوع إلى الإصدارات السابقة في أي وقت.</p>\n<h3 id=\"4-نظام-موزع-للتحكم-في-الإصدارات-distributed-version-control-system\">4. نظام موزّع للتحكم في الإصدارات (Distributed Version Control System)</h3>\n<p>يختلف Git عن أنظمة التحكم في الإصدارات القديمة التي كانت <strong>تخزن جميع الإصدارات على جهاز واحد</strong>.</p>\n<ul>\n<li>في Git، يتم <strong>تخزين جميع الإصدارات لدى كل مستخدم</strong>، مما يعني أن كل شخص لديه نسخة كاملة من المشروع، وليس فقط أحدث إصدار.</li>\n</ul>\n<h1 id=\"لماذا-git-مهم\">لماذا Git مهم؟</h1>\n<p>من الناحية النظرية، يمكن تطوير البرمجيات دون استخدام Git، ولكن من الناحية العملية، لا يمكن العمل بفعالية وكفاءة بدونه للأسباب التالية:</p>\n<h3 id=\"1-تسهيل-التجارب\">1. تسهيل التجارب</h3>\n<ul>\n<li>يمكنك تعديل الملفات وإجراء تجارب عليها دون القلق من فقدانها أو التأثير على عمل الفريق.</li>\n<li>يمكنك العودة إلى أي نقطة سابقة بسهولة بغض النظر عن نتيجة التجربة.</li>\n</ul>\n<h3 id=\"2-فصل-الحفظ-عن-المشاركة\">2. فصل &ldquo;الحفظ&rdquo; عن &ldquo;المشاركة&rdquo;</h3>\n<ul>\n<li>بإمكانك حفظ ملفاتك بأكثر من إصدار دون الحاجة إلى مشاركتها مباشرة.</li>\n<li>يمكننا تشبيه ذلك بعملية تسجيل وحفظ فيديو، ثم تعديله قبل نشره.</li>\n</ul>\n<h3 id=\"3-دعم-التعاون\">3. دعم التعاون</h3>\n<ul>\n<li>يمكنك العمل على المشروع دون إزعاج زملائك، لأن Git هو <strong>نظام موزّع</strong> كما ذكرنا سابقًا.</li>\n</ul>\n<h1 id=\"فوائد-ومميزات-git\">فوائد ومميزات Git</h1>\n<p>عند الحديث عن فوائد Git، من الأفضل أن نبدأ بالمشاكل التي يحلها.</p>\n<h2 id=\"مشكلة-شائعة\">مشكلة شائعة</h2>\n<p>هل تذكر عندما كنت تعمل على ملف وقمت بحفظ نسخة منه باسم &ldquo;آخر نسخة&rdquo;، ثم أضفت تعديلات جديدة فحفظته باسم &ldquo;آخر آخر نسخة&rdquo;؟<br>\nوفي النهاية وجدت نفسك تتعامل مع مجلد مليء بالملفات بأسماء غريبة، دون معرفة أي منها هو الأحدث؟</p>\n<p>Git يحل هذه المشكلة عبر توفير <strong>نظام تحكم متكامل في الإصدارات</strong>.</p>\n<h2 id=\"مميزات-git\">مميزات Git</h2>\n<ul>\n<li><strong>السرعة:</strong> معظم العمليات تتم محليًا على الجهاز.</li>\n<li><strong>نظام موزّع بالكامل:</strong> كل مستخدم يمتلك نسخة كاملة من المشروع.</li>\n<li><strong>إمكانية إنشاء فروع (Branches) بسهولة:</strong> يمكنك العمل على أكثر من نسخة من المشروع في نفس الوقت ثم دمجها لاحقًا.</li>\n</ul>\n<h1 id=\"سلبيات-git\">سلبيات Git</h1>\n<p>على الرغم من مميزاته العديدة، هناك بعض السلبيات:</p>\n<ul>\n<li><strong>الحاجة إلى معرفة تقنية:</strong> Git ليس سهل الاستخدام للمبتدئين أو غير التقنيين.</li>\n<li><strong>ضعف دعم الملفات الثنائية:</strong> لا يعمل Git بكفاءة مع الملفات الثنائية مثل الملفات التنفيذية.</li>\n</ul>\n<h1 id=\"قصة-نشأة-git\">قصة نشأة Git</h1>\n<p>قبل عام 2002، كان مطورو نواة <strong>لينكس</strong> يتبادلون التعديلات عبر مشاركة الملفات يدويًا.</p>\n<p>في عام 2002، بدأوا باستخدام <strong>BitKeeper</strong>، وهو نظام تحكم بالإصدارات كان مجانيًا لهم.<br>\nلكن في عام 2005، ساءت العلاقة بين المجتمع المطور ومالكي BitKeeper، مما أدى إلى إيقاف استخدامه مجانًا.</p>\n<p>نتيجة لذلك، قرر <strong>لينوس تورفالدس</strong>، مبتكر لينكس، تطوير نظام Git، مستفيدًا من التجارب التي مروا بها أثناء استخدام <strong>BitKeeper</strong>.<br>\nوهكذا وُلد Git، وأصبح مع مرور الوقت <strong>أداة قوية، مجانية، ومفتوحة المصدر</strong>.</p>\n<h1 id=\"الخاتمة\">الخاتمة</h1>\n<p>في هذه المقالة، قمنا بتعريف Git وأهميته، وناقشنا مميزاته وسلبياته، ثم تحدثنا عن تاريخه ونشأته.<br>\nهذه ليست سوى مقدمة أساسية قبل التعمق في آلية عمله في مقالات لاحقة.</p>\n<p>شكرًا لوقتك! إذا كانت لديك أي أسئلة أو تعليقات، لا تتردد في مشاركتها. يمكنك أيضًا مشاركة المقالة لتحقيق فائدة أكبر.</p>\n<p>مع تمنياتي بالتوفيق والنجاح للجميع.</p>\n",
				"content_text": "# مقدمة  \n\n\nمن المهم جدًا لأي مطوّر برمجيات (بغض النظر عن اختصاصه ومستواه) أن يكون قادرًا على استخدام **Git**.  \nلتحقيق ذلك، يمكننا حفظ بعض التعليمات والخطوات والعمل بها دون الحاجة إلى فهم آلية عملها.  \n\n\nلكن، نظرًا لأهمية **Git** وكونه أداة أساسية **لا غنى عنها** في تطوير البرمجيات، فإن **استيعاب آلية عمله** سيجعل استخدامه أسهل وأكثر فاعلية، وسيساعدنا على **اكتساب الثقة** عند التعامل معه.  \n\n\nلذلك، سأقوم بكتابة [مجموعة من المقالات](https://hamzarabah.com/categories/git/) لتسليط الضوء على **آلية عمل Git** وبعض المواضيع المتقدمة حوله.  \n\n\n## محتوى المقالة  \n\n\nفي هذه المقالة، سنتعرف على:  \n\n\n- تعريف **Git**  \n- خصائصه وفوائده  \n- سلبياته وحدوده  \n- قصة نشأته وتطوّره  \n\n\n---\n\n\n# ما هو Git؟  \n\n\nهو في الأساس **نظام ملفات بأسلوب عنونة المحتوى**، وتم بناء **نظام موزّع للتحكم في الإصدارات** فوق هذا النظام.  \n\n\nقد تبدو هذه الجملة معقدة، لذا دعونا نحلل مكوناتها:  \n\n\n### 1. نظام الملفات (File System)  \nيقوم **نظام الملفات** بتنظيم الملفات، تخزينها، والوصول إليها على جهاز التخزين.  \n\n\n### 2. نظام ملفات بأسلوب عنونة المحتوى (Content-Addressable File System)  \n- في أنظمة التشغيل التقليدية (مثل ويندوز ولينكس)، يتم **تخزين الملفات في مواقع محددة** على جهاز التخزين، ويمكن الوصول إليها عبر **مسار الملف** (Location-Addressable).  \n- أما في **أسلوب عنونة المحتوى**، يتم **تخزين الملفات بناءً على محتواها** وليس موقعها، ويمكن الوصول إليها عبر **معرّف خاص (Unique Hash)** يستند إلى محتواها.  \n- سيتم التحدث عن هذا الموضوع بشكل أعمق في مقالات لاحقة.  \n\n\n### 3. نظام التحكم في الإصدارات (Version Control System)  \nهو نظام يقوم بـ **تتبع وتسجيل التغييرات** التي تحدث على ملف أو مجموعة من الملفات عبر الزمن، بحيث يمكنك الرجوع إلى الإصدارات السابقة في أي وقت.  \n\n\n### 4. نظام موزّع للتحكم في الإصدارات (Distributed Version Control System)  \nيختلف Git عن أنظمة التحكم في الإصدارات القديمة التي كانت **تخزن جميع الإصدارات على جهاز واحد**.  \n- في Git، يتم **تخزين جميع الإصدارات لدى كل مستخدم**، مما يعني أن كل شخص لديه نسخة كاملة من المشروع، وليس فقط أحدث إصدار.  \n\n\n\n# لماذا Git مهم؟  \n\n\nمن الناحية النظرية، يمكن تطوير البرمجيات دون استخدام Git، ولكن من الناحية العملية، لا يمكن العمل بفعالية وكفاءة بدونه للأسباب التالية:  \n\n\n### 1. تسهيل التجارب  \n- يمكنك تعديل الملفات وإجراء تجارب عليها دون القلق من فقدانها أو التأثير على عمل الفريق.  \n- يمكنك العودة إلى أي نقطة سابقة بسهولة بغض النظر عن نتيجة التجربة.  \n\n\n### 2. فصل \"الحفظ\" عن \"المشاركة\"  \n- بإمكانك حفظ ملفاتك بأكثر من إصدار دون الحاجة إلى مشاركتها مباشرة.  \n- يمكننا تشبيه ذلك بعملية تسجيل وحفظ فيديو، ثم تعديله قبل نشره.  \n\n\n### 3. دعم التعاون  \n- يمكنك العمل على المشروع دون إزعاج زملائك، لأن Git هو **نظام موزّع** كما ذكرنا سابقًا.  \n\n\n\n\n# فوائد ومميزات Git  \n\n\nعند الحديث عن فوائد Git، من الأفضل أن نبدأ بالمشاكل التي يحلها.  \n\n\n## مشكلة شائعة  \nهل تذكر عندما كنت تعمل على ملف وقمت بحفظ نسخة منه باسم \"آخر نسخة\"، ثم أضفت تعديلات جديدة فحفظته باسم \"آخر آخر نسخة\"؟  \nوفي النهاية وجدت نفسك تتعامل مع مجلد مليء بالملفات بأسماء غريبة، دون معرفة أي منها هو الأحدث؟  \n\n\nGit يحل هذه المشكلة عبر توفير **نظام تحكم متكامل في الإصدارات**.  \n\n\n## مميزات Git  \n- **السرعة:** معظم العمليات تتم محليًا على الجهاز.  \n- **نظام موزّع بالكامل:** كل مستخدم يمتلك نسخة كاملة من المشروع.  \n- **إمكانية إنشاء فروع (Branches) بسهولة:** يمكنك العمل على أكثر من نسخة من المشروع في نفس الوقت ثم دمجها لاحقًا.  \n\n\n\n\n# سلبيات Git  \n\n\nعلى الرغم من مميزاته العديدة، هناك بعض السلبيات:  \n\n\n- **الحاجة إلى معرفة تقنية:** Git ليس سهل الاستخدام للمبتدئين أو غير التقنيين.  \n- **ضعف دعم الملفات الثنائية:** لا يعمل Git بكفاءة مع الملفات الثنائية مثل الملفات التنفيذية.  \n\n\n\n\n# قصة نشأة Git  \n\n\nقبل عام 2002، كان مطورو نواة **لينكس** يتبادلون التعديلات عبر مشاركة الملفات يدويًا.  \n\n\nفي عام 2002، بدأوا باستخدام **BitKeeper**، وهو نظام تحكم بالإصدارات كان مجانيًا لهم.  \nلكن في عام 2005، ساءت العلاقة بين المجتمع المطور ومالكي BitKeeper، مما أدى إلى إيقاف استخدامه مجانًا.  \n\n\nنتيجة لذلك، قرر **لينوس تورفالدس**، مبتكر لينكس، تطوير نظام Git، مستفيدًا من التجارب التي مروا بها أثناء استخدام **BitKeeper**.  \nوهكذا وُلد Git، وأصبح مع مرور الوقت **أداة قوية، مجانية، ومفتوحة المصدر**.  \n\n\n\n# الخاتمة  \n\n\nفي هذه المقالة، قمنا بتعريف Git وأهميته، وناقشنا مميزاته وسلبياته، ثم تحدثنا عن تاريخه ونشأته.  \nهذه ليست سوى مقدمة أساسية قبل التعمق في آلية عمله في مقالات لاحقة.  \n\n\nشكرًا لوقتك! إذا كانت لديك أي أسئلة أو تعليقات، لا تتردد في مشاركتها. يمكنك أيضًا مشاركة المقالة لتحقيق فائدة أكبر.  \n\n\nمع تمنياتي بالتوفيق والنجاح للجميع.\n\n",
				"date_published": "2025-02-01T16:42:00+03:00",
				"url": "https://hamzarabah.com/2025/02/01/git.html",
				"tags": ["Git"]
			}
	]
}
